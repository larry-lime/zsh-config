#!/usr/bin/zsh

OUTPUT=$(find ~/projects ~/.config ~/career -not -path '*/\.git/*'\
  | fzf\
    --expect "alt-enter,enter,alt-g,alt-f" \
    --preview "
    if [ -d {} ]; then
      exa -T -L 2 --icons --group-directories-first -I 'node_modules' --git-ignore {};
    else
      batcat --style=numbers --color=always --line-range :500 {};
    fi"\
  | xargs echo)

read -r KEYPRESS BASE_PATH <<< "${OUTPUT}"

if [ -z $BASE_PATH ]; then
  exit 0
fi

BASE_NAME=$(basename $BASE_PATH)
PARENT_PATH=$(dirname $BASE_PATH)
PARENT_NAME=$(basename $PARENT_PATH | tr -d '.')
PATH_IS_DIR=false
PATH_IS_FILE=false
PATH_IS_CONFIG=false

start_new_session ()
{
  if [[ "$PATH_IS_DIR" = true ]]; then
    if [[ "$BASE_NAME" = "zsh" ]] || [[ "$BASE_NAME" = "nvim" ]] || [[ "$BASE_NAME" = "tmux" ]]; then # If it's a config directory name the tmux session 'config'
      PATH_IS_CONFIG=true
      tmux new-session -ds "config" -c $BASE_PATH
    else
      tmux new-session -ds $BASE_NAME -c $BASE_PATH # Else, make $SELECTION the session name
    fi
  elif [[ "$PATH_IS_FILE" = true ]]; then
    tmux new-session -ds $PARENT_NAME -c $PARENT_PATH # Else, make $SELECTION the session name
  fi
}

jump_to_open_session ()
{
  if [[ "$PATH_IS_DIR" = true ]]; then
    if [[ "$PATH_IS_CONFIG" = false ]]; then
      tmux switch-client -t $BASE_NAME
    else
      tmux switch-client -t "config"
    fi
  elif [[ "$PATH_IS_FILE" = true ]]; then
    tmux switch-client -t $PARENT_NAME
  fi
}

# TODO when recursively searching, display relative path instead of absolute path
recursive_search ()
{

  if [[ $PATH_IS_DIR ]]; then
    search_path="$BASE_PATH"
    relative_path="$BASE_NAME"
  elif [[ $PATH_IS_FILE ]]; then
    search_path="$PARENT_PATH"
    relative_path="$PARENT_NAME"
  fi

  ~/.config/zsh/tfux $search_path
}

open_directory ()
{
  if [ "$KEYPRESS" = "enter" ]; then
    tmux send-keys -t $BASE_NAME.0 "$EDITOR" ENTER
  elif [[ "$KEYPRESS" = "alt-g" ]]; then
    grep_search
  elif [[ "$KEYPRESS" = "alt-f" ]]; then
    recursive_search
  else
    start_new_session
  fi
  jump_to_open_session
}

open_file ()
{
  if [ "$KEYPRESS" = "enter" ]; then
    tmux send-keys -t $PARENT_NAME.0 "$EDITOR $BASE_NAME" ENTER
  elif [[ "$KEYPRESS" = "alt-g" ]]; then
    grep_search
  elif [[ "$KEYPRESS" = "alt-f" ]]; then
    recursive_search
  else
    start_new_session
  fi
  jump_to_open_session
}

grep_search () {

  if [[ $PATH_IS_DIR ]]; then
    grep_name="$BASE_PATH"
    session_name="$BASE_NAME"
  elif [[ $PATH_IS_FILE ]]; then
    grep_name="$PARENT_PATH"
    session_name="$PARENT_NAME"
  fi

  output=$(rg \
    --line-number \
    --no-column \
    --no-heading \
    --glob "!.git/*" \
    "." \
    "$grep_name" \
    | awk -F  ":" '{print $1 " " $2 " " $3}' \
    | fzf\
      --expect "alt-enter,enter" \
      --preview "batcat --color always {1} -H {2}" \
    | xargs echo)

  if [ -z "$output" ]; then
    tmux kill-session -t $session_name
    return
  fi

  read -r keypress file_path line <<< "${output}"
  line_number=${line%% *}
  parent_path=$(dirname $file_path)

  if [[ "$keypress" = "enter" ]]; then
    tmux send-keys -t $session_name.0 "$EDITOR -c :$line_number $file_path" ENTER
  elif [[ "$keypress" = "alt-enter" ]]; then
    if [[ "$parent_path" != "$grep_name" ]]; then
      relative_path=${parent_path#"$grep_name"}
      relative_path="${relative_path:1}"
      tmux send-keys -t $session_name.0 "cd $relative_path" ENTER
    fi
  fi
}

main ()
{
  if [ -d $BASE_PATH ]; then
    PATH_IS_DIR=true
    start_new_session
    open_directory
  else
    PATH_IS_FILE=true
    start_new_session
    open_file
  fi
}
main
